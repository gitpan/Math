This lists only the changes for the current release (v1.33) over the last
version, since HISTORY is now quite big:

General fixes:
* fixed and included rounding benchmark (measured bmul instead of bround)
* new round() function does now rounding according to A/P/R, bnorm() is only
  for normalization; to avoid (deep) recursion
* tests for fpow(), is_one() in MBF and MBI
* fixed is_one() in MBF for -1
* MBI bpow() bugs regarding negative powers ($x ** -$y) when $x was 1 or -1

General additions:
* fmod()
* fdiv() in list context
* hexadecimal input

Speedups:
* MBI::bround() is now much faster in rounding up (no longer 10 ** $pad)
* brsft()/blsft() handle now different bases, and are much faster for base 10
  (needed in certain floating point operations, as well in bpow(), new() etc)
* _trailing_zeros is 50% faster
* MBF::new() is 90% faster for input w/ lot's (>10) of trailing zeros
* bpow() is now faster (sometimes even O(N) instead of O(N*N)) for $x with lot
  of trailing zeros. So 100 ** 2000 will take a very short time now.

Accuracy:
* fixed accuracy/precision after each operation and added tests for it
* $x->accuracy() or $x->precision() do immidiately round() and thus change
  $x, so that you can not have $x = 123.456 with A=3. This 'fixes' the
  bug/feature that:

  $y = Math::BigInt->new(123456); $y->accuracy(3);	# y still 123456!
  $z = $x - $y;						# y now is 123000!

